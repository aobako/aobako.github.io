---
import { type CollectionEntry, getCollection } from "astro:content";
import { render } from "astro:content";
import Layout from "../../components/Layout.astro";
import { FormattedDate } from "../../components/FormattedDate";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { title, description, pubDate, heroImage } = post.data;
const { Content, remarkPluginFrontmatter } = await render(post);
const { updateDate } = remarkPluginFrontmatter;
---

<Layout title={title} description={description}>
  <main>
    <article class="prose prose-invert max-w-none">
      <div>
        {heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
      </div>
      <div>
        <div>
          <FormattedDate date={pubDate} />
          {
            updateDate && (
              <div>
                Last updated on <FormattedDate date={new Date(updateDate)} />
              </div>
            )
          }
        </div>
        <h1>{title}</h1>
      </div>
      <Content />
    </article>
  </main>
</Layout>
